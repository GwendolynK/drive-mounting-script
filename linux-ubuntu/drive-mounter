#!/bin/bash
#
# https://github.com/WestleyK/drive-mounting-script
# Created by: Westley K
# Date: Jun 28, 2018
# version-1.0-ubuntu
# Designed and tested on ubuntu
#

# 8 diffrent drives maxinum, NOT RECOMMENDED FOR MORE THEN ONE DRIVE!
# this version will not unmount drives when mounting, DO NOT MOUNT NORE THAN ONE DRIVE!



# the mount point, feel free to change it :)
mount_point=$"/media/usb-drives"




echo "https://github.com/WestleyK/drive-mounting-script"
echo

option=$1
if [[ -n $option ]]; then 
	case $option in
		-h | -help)
			echo "usage: driver-mounter [-option]
		-h | -help | --help (display help menu)
		-a | -all (unmount all drives)
		-d (display all drives, mounted or not)
		-m (mount drive only if there one)
		-p (temporally change the mount point when mounting drive) (defalt:/media/usb-drives)
		-r (remount the drive, this only works if one drive is connected)"
			exit
			;;
		-a | -all)
			un_mount_all=$"true"
			;;
		-d)
			display_drive=$"true"
			;;
		-m)
			mount_drive=$"true"
			;;
		-p)
			tmp_mount_point=$"true"
			;;
		-r)
			re_mount=$"true"
			;;
		*)
			echo "Option not found, try: drive-mounter -help"
			exit
			;;
	esac
fi


if [[ $un_mount_all == "true" ]]; then
	disk_loca=$( df -aTh | grep '^/dev/s' | grep '/media/' | tail -1 | cut -f 1 -d ' ' )
	if [[ -z $disk_loca ]]; then
		echo "No disk(s) to un-mount :o"
		exit
	fi
	while [[ -n $disk_loca ]]; do	
		umount $disk_loca &> /dev/null
		echo "Un-mounted: $disk_loca"
		disk_loca=$( df -aTh | grep '^/dev/s' | grep '/media/' | tail -1 | cut -f 1 -d ' ' )
	done
	echo "Done"
	exit
fi



if [[ $display_drive == "true" ]]; then 
	what_to_mount=$( sudo fdisk -l | grep '^/dev/s' | grep 'W95' )
	if [[ -n $what_to_mount ]]; then
		sudo fdisk -l | grep '^/dev/s'
		exit
	else
		echo "There's no drives! :o"
		exit
	fi
fi


if [[ $mount_drive == "true" ]]; then
	drive_check=$( sudo fdisk -l | grep '^/dev/s' | grep 'W95' | cut -f 1 -d ' ' | wc -l )
	if [[ $drive_check -eq "2" ]]; then
		echo "Theres more than one drive! nice try :P"
		exit
	fi
	disk_loca=$( sudo fdisk -l | grep '^/dev/s' | grep 'W95' | cut -f 1 -d ' ' )
	if [[  -z $disk_loca ]]; then
		echo "There's nothing you can mount."
		exit
	fi
	sudo mount $disk_loca $mount_point 
	echo "Mounted to: $mount_point"
	exit
fi


if [[ $tmp_mount_point == "true" ]]; then
	echo
	echo
	suod fdisk -l | grep '^/dev/s' | grep 'W95' | grep -n 'dev/s'
	whats_to_mount=$( fdisk -l | grep '^/dev/s' | grep 'W95' | grep -n 'dev/s' )
	if [[ -z $whats_to_mount ]]; then
		echo "There is nothing you can mount or un-mount"
		echo
		exit
	fi
	echo
	read -p "What would you like to mount? [1-8]:" -n 1 -r
	echo
	if [[ $REPLY != [1-8] ]]; then
		echo
		echo "???"
		exit
	fi
	disk_loca=$( sudo fdisk -l | grep '^/dev/s' | grep 'W95' | grep -n '/dev/s' | grep ^$REPLY | cut -f 1 -d ' ' | cut -c3- )
	if [[ -z $disk_loca ]]; then 
		echo
		echo "WRONG MOVE!"
		echo
		exit
	fi
	echo "Where would you like to mount $disk_loca? (eg. /media/usb)"
	read -p ":" -e -i \/media\/ new_mount_point
	echo
	new_point_check=$( echo "$new_mount_point" | grep '^/' | grep -v '/$' )
	if [[ -z $new_point_check ]]; then
		echo "Not a valid mount point"
		echo "Try: /media/usb"
		exit
	fi
	if [[ ! -d "$new_mount_point" ]]; then
		echo "$new_mount_point does not exist,"
		echo "Creating $new_mount_point..."
		sudo mkdir -p $new_mount_point
	fi
	check_mount=$( df -aTh | grep $disk_loca | cut -f 1 -d ' ' )
	if [[ -n $check_mount ]]; then
		echo "Unmounting $disk_loca..."
		umount $disk_loca
		sleep 0.1s
	fi
	sudo mount $disk_loca $new_mount_point 
	echo "$disk_loca mounted to $new_mount_point"
	exit
fi


if [[ $re_mount == "true" ]]; then 
	drive_check=$( df -aTh | grep '^/dev/s' | grep 'W95' | cut -f 1 -d ' ' | wc -l )
	if [[ $drive_check -eq "2" ]]; then
		echo "Only one drive can be present to use this feature.  :P"
		exit
	fi
	drive_check=$( df -aTh | grep '^/dev/s' | grep 'W95' | cut -f 1 -d ' ' )
	if [[ -z $drive_check ]]; then
		echo "Nothing you can re-mount."
		echo "Try: drive-mounter -d (for drive list)"
		exit
	fi
	disk_loca=$( df -aTh | grep '^/dev/s' | grep 'W95' | cut -f 1 -d ' ' )
	umount $disk_loca
	sleep 0.1s
	echo "Mounting..."
	sudo mount $disk_loca $mount_point 
	echo "Mounted to: $mount_point"
	exit
fi

if [[ ! -d $mount_point ]]; then
	echo "$mount_point does not exist!"
	echo "Creating $mount_point"
	sudo mkdir $mount_point
fi

echo
echo
# check if theres anything to mount or unmount
sudo fdisk -l | grep '^/dev/s' | grep 'W95' | grep -n 'dev/s'
whats_to_mount=$( sudo fdisk -l | grep '^/dev/s' | grep 'W95' | grep -n 'dev/s' )
if [[ -z $whats_to_mount ]]; then
	echo "There is nothing you can mount or un-mount"
	echo
	exit
fi



echo
read -p "What would you like to mount or un-mount? [1-8]:" -n 1 -r
# 8 maxinum diffrent drives
echo
if [[ $REPLY != [1-8] ]]; then
	echo
	echo "???"
	echo
	exit
fi
# get the location of the disk
disk_loca=$( sudo fdisk -l | grep '^/dev/s' | grep 'W95' | grep -n '/dev/s' | grep ^$REPLY | cut -f 1 -d ' ' | cut -c3- )
if [[ -z $disk_loca ]]; then 
	echo
	echo "WRONG MOVE!"
	echo
	exit
fi
echo 
echo $disk_loca
echo
read -p "(m)mount, (u)un-mount or (r)remount?  [m,u,r]:" -n 1 -r
echo
case $REPLY in
	m | M)
		echo "Mounting..."
		sudo mount $disk_loca $mount_point 
		echo "$disk_loca mounted to: $mount_point"
		exit
		;;
	u | U)
		echo -n "Un-mounting..."
		umount $disk_loca
		echo "Un-mounted $disk_loca"
		echo "done"
		exit
		;;
	r | R)
		echo "Remounting..."
		umount $disk_loca
		echo -n "Unmounted, "
		sleep 0.1s
		echo -n "Mounting..."
		sudo mount $disk_loca $mount_point 
		echo "Done"
		exit
		;;
	*)
		echo "Not a valid option! :O"
		exit
		;;
esac


#
# End Scripr
#

